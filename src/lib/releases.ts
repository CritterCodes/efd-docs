export interface ReleaseNote {
  version: string
  date: string
  type: 'major' | 'minor' | 'patch'
  features: string[]
  fixes: string[]
  breaking: string[]
  summary: string
  ecosystem?: boolean
}

export interface RecentUpdate {
  title: string
  version: string
  description: string
  date: string
  type: 'feature' | 'fix' | 'breaking' | 'docs'
  icon: 'feature' | 'fix' | 'breaking' | 'docs'
}

// This will be auto-generated by our release script
export const RELEASE_NOTES: ReleaseNote[] = [
  {
  "version": "v1.3.1",
  "date": "2025-10-23",
  "type": "patch",
  "summary": "Hotfix to add missing description and special requests fields to custom ticket overview",
  "features": [],
  "fixes": [
    "[EFD Admin] hotfix: add missing description and special requests fields to custom ticket overview"
  ],
  "breaking": [],
  "ecosystem": true
},
  {
  "version": "v1.3.0",
  "date": "2025-10-23",
  "type": "minor",
  "summary": "Ecosystem feature release with 3 new features",
  "features": [
    "[EFD Shop] feat: implement mobile-friendly policy modal with redirect flow",
    "[EFD Shop] feat(custom-designs): implement policy acknowledgment modal",
    "[EFD Shop] feat(custom-designs): implement intelligent gemstone selection with TagInput"
  ],
  "fixes": [
    "[EFD Shop] fix(custom-designs): enhance error handling for image upload workflow"
  ],
  "breaking": [],
  "ecosystem": true
},
  {
  "version": "v1.2.2",
  "date": "2025-10-22",
  "type": "patch",
  "summary": "Ecosystem maintenance release with 8 fixes",
  "features": [],
  "fixes": [
    "[EFD Shop] fix(mobile): replace custom mobile filter overlay with Material-UI Drawer",
    "[EFD Shop] fix(mobile): resolve mobile viewport and hydration issues",
    "[EFD Shop] fix(ui): implement mobile-responsive filters and resolve homepage hydration issues",
    "[EFD Shop] fix(ui): implement mobile-responsive filters and resolve homepage hydration issues",
    "[EFD Shop] fix(checkout): resolve multi-store checkout ECONNREFUSED error",
    "[EFD Shop] fix(auth): implement case-insensitive email lookups in UserService",
    "[EFD Admin] fix(auth): implement case-insensitive email lookups across ecosystem",
    "[EFD Documentation] fix(auth): implement case-insensitive email lookups in docs auth"
  ],
  "breaking": [],
  "ecosystem": true
},
  {
  "version": "v1.2.1",
  "date": "2025-10-21",
  "type": "patch",
  "summary": "Ecosystem maintenance release with 12 fixes",
  "features": [],
  "fixes": [
    "[EFD Admin] fix: improve signin redirect reliability",
    "[EFD Admin] fix: remove remaining storeID reference from session callback",
    "[EFD Admin] fix(critical): remove storeID field from auth session",
    "[EFD Admin] fix: resolve dashboard infinite loading after login",
    "[EFD Documentation] fix: correct JSX syntax error in layout.tsx",
    "[EFD Documentation] fix: add Suspense boundaries for all useSearchParams usage in Next.js 15",
    "[EFD Documentation] fix: wrap useSearchParams in Suspense boundary for Next.js 15 compatibility",
    "[EFD Documentation] fix(auth): add debug logging and fix logout redirect",
    "[EFD Documentation] fix(auth): resolve OAuth token refresh and cookie domain issues",
    "[EFD Documentation] fix(ssr): add comprehensive window and JSON.parse safety checks",
    "[EFD Documentation] fix: prevent JSON.parse error in server-side rendering",
    "[EFD Documentation] fix: add uuid dependency for build compatibility"
  ],
  "breaking": [],
  "ecosystem": true
},
  {
  "version": "v1.2.0",
  "date": "2025-10-19",
  "type": "minor",
  "summary": "Ecosystem feature release with 1 new feature",
  "features": [
    "[EFD Admin] feat: implement centralized authentication system"
  ],
  "fixes": [],
  "breaking": [],
  "ecosystem": true
},
  {
  "version": "v1.1.1",
  "date": "2025-10-19",
  "type": "minor",
  "summary": "Ecosystem feature release with 1 new feature",
  "features": [
    "[EFD Admin] feat: implement automated release system with GitHub Actions"
  ],
  "fixes": [
    "[EFD Admin] fix(api): update wholesale API routes to use NextAuth v5 auth() function"
  ],
  "breaking": [],
  "ecosystem": true
},
  {
  "version": "v1.1.0",
  "date": "2025-10-19",
  "type": "minor",
  "summary": "Ecosystem feature release with 3 new features",
  "features": [
    "[EFD Admin] feat(admin): implement comprehensive wholesaler repair management system",
    "[EFD Admin] feat: complete wholesale management system with optimized logging",
    "[EFD Admin] feat(wholesale): implement wholesale application management system"
  ],
  "fixes": [
    "[EFD Admin] fix(auth): add missing providerMap export for signin page"
  ],
  "breaking": [],
  "ecosystem": true
},
  {
    version: 'v1.0.0',
    date: '2025-10-18',
    type: 'major',
    summary: 'Initial release of the Engel Fine Design documentation platform',
    features: [
      'Multi-select artisan types with dropdown+pills interface',
      'Unified ecosystem release management',
      'Role-based documentation access',
      'Modern documentation layout with table of contents',
      'Enhanced markdown rendering with visual callouts'
    ],
    fixes: [],
    breaking: []
  }
]

// Auto-generated from latest releases
export const RECENT_UPDATES: RecentUpdate[] = [
  {
    title: 'Documentation Platform Launch',
    version: 'v1.0.0',
    description: 'Complete documentation system with role-based access',
    date: '2025-10-18',
    type: 'feature',
    icon: 'feature'
  },
  {
    title: 'Multi-select Artisan Types',
    version: 'v1.0.0', 
    description: 'Added dropdown+pills interface for artisan type selection',
    date: '2025-10-18',
    type: 'feature',
    icon: 'feature'
  },
  {
    title: 'Ecosystem Release Management',
    version: 'v1.0.0',
    description: 'Unified versioning system across all applications',
    date: '2025-10-18',
    type: 'feature',
    icon: 'feature'
  }
]

// Get the latest N updates for dashboard
export const getRecentUpdates = (limit: number = 3): RecentUpdate[] => {
  return RECENT_UPDATES.slice(0, limit)
}

// Get release notes by version
export const getReleaseNotes = (version?: string): ReleaseNote | ReleaseNote[] => {
  if (version) {
    return RELEASE_NOTES.find(note => note.version === version) || RELEASE_NOTES[0]
  }
  return RELEASE_NOTES
}